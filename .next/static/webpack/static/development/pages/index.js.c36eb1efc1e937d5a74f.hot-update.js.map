{"version":3,"file":"static/webpack/static/development/pages/index.js.c36eb1efc1e937d5a74f.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Form, Message, Grid, Header, Button } from \"semantic-ui-react\";\nimport { createUser, loginUser } from \"../utils/handler\";\nimport AuthService from '../utils/AuthService'\n\nimport \"./styles.css\";\n\n//const auth = new AuthService()\n\nexport default class Page extends Component {\n  state = {\n    data: {},\n    message: \"\",\n    error: \"\",\n    visible: false,\n    showSignUp: false\n  };\n\n  handleChange = e => {\n    const { value, name } = e.target;\n    this.setState(prevState => {\n      return {\n        data: {\n          ...prevState.data,\n          [name]: value\n        }\n      };\n    });\n  };\n\n  handleSubmit = () => {\n    if (this.state.showSignUp) {\n      createUser(this.state.data)\n        .then(response => {\n          this.setState({ message: \"user created\", visible: true });\n        })\n        .catch(e => {\n          this.setState({ error: e.message, visible: true });\n        });\n\n      setTimeout(() => {\n        this.setState({ visible: false });\n      }, 2000);\n    } else {\n      this.propsauth.login(this.state.data)\n    }\n  };\n\n  handleDismiss = () => {\n    this.setState({ visible: false });\n  };\n  toggleForm = () => {\n    this.setState({ showSignUp: !this.state.showSignUp });\n  };\n  render() {\n    const { error, message, visible, showSignUp } = this.state;\n\n    return (\n      <Grid as={\"container\"} className=\"centered\" padded=\"vertically\">\n      <div>\n        {visible && (\n          <Message\n            header={error ? \"Error\" : \"Info\"}\n            content={error || message}\n            color={error ? \"red\" : \"green\"}\n          />\n        )}\n        </div>\n        <Form onSubmit={this.handleSubmit}>\n          <Header as=\"h3\" color=\"teal\">\n            {showSignUp ? \"Sign Up \" : \"Login\"}\n          </Header>\n          <Form.Input\n            name=\"username\"\n            onChange={this.handleChange}\n            type=\"text\"\n            placeholder=\"username\"\n            required\n          />\n          <Form.Input\n            name=\"password\"\n            onChange={this.handleChange}\n            type=\"password\"\n            placeholder=\"password\"\n            required\n          />\n\n          <Button\n            type=\"submit\"\n            content={showSignUp ? \"sign up \" : \"Login\"}\n            color={ showSignUp ? \"blue \" : \"green\" }\n          />\n\n          <Form.Button\n            type=\"button\"\n            basic\n            content={showSignUp ? \"click to login\" : \"click to sign Up\"}\n            onClick={this.toggleForm}\n            className='toogleButton'\n\n          />\n\n        </Form>\n      </Grid>\n    );\n  }\n}\nPage.getInitialProps = async ({ url }) => {\n  const auth = new AuthService()\n\n  if (auth.loggedIn()) {\n    url.replaceTo('/home')\n  }\n  else{\n    return {auth}\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;;;;AAhGA;AACA;AADA;AACA;AAiGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAGA;AAJA;AAAA;AACA;AADA;AAAA;AAOA;AAAA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}